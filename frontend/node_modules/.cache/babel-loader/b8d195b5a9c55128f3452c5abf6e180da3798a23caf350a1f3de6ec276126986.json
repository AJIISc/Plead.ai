{"ast":null,"code":"var _jsxFileName = \"/Users/anurajmaurya/Desktop/Cursor Project/frontend/src/components/CreateContract.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './CreateContract.css';\n\n// function CreateContract() {\n//   const [contractTitle, setContractTitle] = useState('');\n//   const [contractDetails, setContractDetails] = useState('');\n//   const [connections, setConnections] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchConnections = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         alert('You are not authenticated. Please log in.');\n//         return;\n//       }\n\n//       try {\n//         const response = await fetch('http://localhost:8000/api/v1/connections', {\n//           method: 'GET',\n//           headers: {\n//             'Authorization': `Bearer ${token}`,\n//             'Content-Type': 'application/json'\n//           }\n//         });\n\n//         if (!response.ok) {\n//           const errorResponse = await response.json();\n//           throw new Error('Failed to fetch connections: ' + errorResponse.message);\n//         }\n\n//         const result = await response.json();\n//         setConnections(result.connections);\n//       } catch (error) {\n//         alert(error.message);\n//       }\n//     };\n\n//     fetchConnections();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!selectedUser) {\n//       alert('Please select a user to send an offer.');\n//       return;\n//     }\n\n//     const offerData = {\n//       contract_title: contractTitle,\n//       contract_details: contractDetails,\n//       user_id: selectedUser.connection_id\n//     };\n\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:8000/api/v1/send-offer', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(offerData)\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to send offer: ' + errorResponse.message);\n//       }\n\n//       alert('Offer sent successfully!');\n//       setContractTitle('');\n//       setContractDetails('');\n//       setSelectedUser(null);\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const filteredConnection = connections.filter(connection => \n//     connection.friend_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     connection.friend_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     connection.friend_phone.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   const toggleSelectUser = (connection) => {\n//     if (selectedUser && selectedUser.connection_id === connection.connection_id) {\n//       // Deselect the user if already selected\n//       setSelectedUser(null);\n//     } else {\n//       // Select the user\n//       setSelectedUser(connection);\n//     }\n//   };\n\n//   return (\n//     <div className=\"contract\">\n//       <h2>Make a Contract</h2>\n//       <h3>Your Connections</h3>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search connections...\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         style={{ marginBottom: '10px', width: '100%' }}\n//       />\n//       <div style={{ maxHeight: '200px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\n//         {filteredConnection.length > 0 ? (\n//           <ul>\n//             {filteredConnection.map((connection) => (\n//               <li key={connection.connection_id}>\n//                 {connection.friend_name} - {connection.friend_email} - {connection.friend_phone}\n//                 <button onClick={() => toggleSelectUser(connection)} style={{ marginLeft: '10px' }}>\n//                   {selectedUser && selectedUser.connection_id === connection.connection_id ? 'Deselect' : 'Select'}\n//                 </button>\n//                 {selectedUser && selectedUser.connection_id === connection.connection_id && (\n//                   <span style={{ marginLeft: '10px', color: 'green' }}>✔️</span>\n//                 )}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>No connections found.</p>\n//         )}\n//       </div>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"contractTitle\">Contract Title:</label>\n//         <input\n//           type=\"text\"\n//           id=\"contractTitle\"\n//           name=\"contractTitle\"\n//           value={contractTitle}\n//           onChange={(e) => setContractTitle(e.target.value)}\n//           required\n//         />\n\n//         <label htmlFor=\"contractDetails\">Contract Details:</label>\n//         <textarea\n//           id=\"contractDetails\"\n//           name=\"contractDetails\"\n//           value={contractDetails}\n//           onChange={(e) => setContractDetails(e.target.value)}\n//           required\n//         ></textarea>\n\n//         <button type=\"submit\">Send Offer</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CreateContract; \nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CreateContract.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateContract() {\n  _s();\n  const [contractTitle, setContractTitle] = useState('');\n  const [contractDetails, setContractDetails] = useState('');\n  const [connections, setConnections] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedContractType, setSelectedContractType] = useState('');\n  const [useDefaultValues, setUseDefaultValues] = useState(false); // New state for default values\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchConnections = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You are not authenticated. Please log in.');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:8000/api/v1/connections', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          const errorResponse = await response.json();\n          throw new Error('Failed to fetch connections: ' + errorResponse.message);\n        }\n        const result = await response.json();\n        setConnections(result.connections);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fetchConnections();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedUser) {\n      alert('Please select a user to send an offer.');\n      return;\n    }\n    const offerData = {\n      contract_title: contractTitle,\n      contract_details: contractDetails,\n      user_id: selectedUser.connection_id,\n      contract_type: selectedContractType\n    };\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/v1/send-offer', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(offerData)\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to send offer: ' + errorResponse.message);\n      }\n      alert('Offer sent successfully!');\n      setContractTitle('');\n      setContractDetails('');\n      setSelectedUser(null);\n      setSelectedContractType('');\n      setUseDefaultValues(false); // Reset default values\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const filteredConnection = connections.filter(connection => connection.friend_name.toLowerCase().includes(searchTerm.toLowerCase()) || connection.friend_email.toLowerCase().includes(searchTerm.toLowerCase()) || connection.friend_phone.toLowerCase().includes(searchTerm.toLowerCase()));\n  const toggleSelectUser = connection => {\n    if (selectedUser && selectedUser.connection_id === connection.connection_id) {\n      setSelectedUser(null);\n    } else {\n      setSelectedUser(connection);\n    }\n  };\n  const handleContractTypeChange = e => {\n    setSelectedContractType(e.target.value);\n    setUseDefaultValues(false); // Reset default values when changing contract type\n  };\n  const defaultValues = {\n    \"LOAN AGREEMENT\": \"Default Loan Agreement Terms: Amount: ₹1,00,000, Interest Rate: 10%, Due Date: 2024-12-31.\",\n    \"FRIENDLY LOAN AGREEMENT\": \"Default Friendly Loan Agreement Terms: Amount: ₹50,000, Interest Rate: 5%, Due Date: 2024-12-31.\",\n    \"SALES AGREEMENT\": \"Default Sales Agreement Terms: Product: Laptop, Price: ₹50,000, Delivery: 7 days.\",\n    \"CURRENCY EXCHANGE AGREEMENT\": \"Default Currency Exchange Terms: Amount: $1,000, Rate: 75 INR/USD.\",\n    \"SERVICE AGREEMENT\": \"Default Service Agreement Terms: Service: Web Development, Duration: 3 months.\",\n    \"BARTER AGREEMENT\": \"Default Barter Agreement Terms: Goods: Wheat, Quantity: 100 kg.\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contract\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Make a Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Connections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search connections...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        marginBottom: '10px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '200px',\n        overflowY: 'scroll',\n        border: '1px solid #ccc',\n        padding: '10px'\n      },\n      children: filteredConnection.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredConnection.map(connection => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [connection.friend_name, \" - \", connection.friend_email, \" - \", connection.friend_phone, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleSelectUser(connection),\n            style: {\n              marginLeft: '10px'\n            },\n            children: selectedUser && selectedUser.connection_id === connection.connection_id ? 'Deselect' : 'Select'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), selectedUser && selectedUser.connection_id === connection.connection_id && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '10px',\n              color: 'green'\n            },\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this)]\n        }, connection.connection_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No connections found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contractTitle\",\n        children: \"Contract Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"contractTitle\",\n        name: \"contractTitle\",\n        value: contractTitle,\n        onChange: e => setContractTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contractDetails\",\n        children: \"Contract Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"contractDetails\",\n        name: \"contractDetails\",\n        value: contractDetails,\n        onChange: e => setContractDetails(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contractType\",\n        children: \"Select Contract Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"contractType\",\n        value: selectedContractType,\n        onChange: handleContractTypeChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a Contract Type--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LOAN AGREEMENT\",\n          children: \"Loan Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FRIENDLY LOAN AGREEMENT\",\n          children: \"Friendly Loan Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SALES AGREEMENT\",\n          children: \"Sales Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CURRENCY EXCHANGE AGREEMENT\",\n          children: \"Currency Exchange Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SERVICE AGREEMENT\",\n          children: \"Service Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BARTER AGREEMENT\",\n          children: \"Barter Agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), selectedContractType && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Default Values for \", selectedContractType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: defaultValues[selectedContractType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setUseDefaultValues(true),\n          children: \"Use Default Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setUseDefaultValues(false),\n          children: \"Customize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), useDefaultValues && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Using Default Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contract Title: \", contractTitle || defaultValues[selectedContractType]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contract Details: \", contractDetails || defaultValues[selectedContractType]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateContract, \"9qq8lxyw2UV8v74fynULDao1yJU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateContract;\nexport default CreateContract;\nvar _c;\n$RefreshReg$(_c, \"CreateContract\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","CreateContract","_s","contractTitle","setContractTitle","contractDetails","setContractDetails","connections","setConnections","searchTerm","setSearchTerm","selectedUser","setSelectedUser","selectedContractType","setSelectedContractType","useDefaultValues","setUseDefaultValues","navigate","fetchConnections","token","localStorage","getItem","alert","response","fetch","method","headers","ok","errorResponse","json","Error","message","result","error","handleSubmit","e","preventDefault","offerData","contract_title","contract_details","user_id","connection_id","contract_type","body","JSON","stringify","filteredConnection","filter","connection","friend_name","toLowerCase","includes","friend_email","friend_phone","toggleSelectUser","handleContractTypeChange","target","value","defaultValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","style","marginBottom","width","maxHeight","overflowY","border","padding","length","map","onClick","marginLeft","color","onSubmit","htmlFor","id","name","required","_c","$RefreshReg$"],"sources":["/Users/anurajmaurya/Desktop/Cursor Project/frontend/src/components/CreateContract.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './CreateContract.css';\n\n// function CreateContract() {\n//   const [contractTitle, setContractTitle] = useState('');\n//   const [contractDetails, setContractDetails] = useState('');\n//   const [connections, setConnections] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchConnections = async () => {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         alert('You are not authenticated. Please log in.');\n//         return;\n//       }\n\n//       try {\n//         const response = await fetch('http://localhost:8000/api/v1/connections', {\n//           method: 'GET',\n//           headers: {\n//             'Authorization': `Bearer ${token}`,\n//             'Content-Type': 'application/json'\n//           }\n//         });\n\n//         if (!response.ok) {\n//           const errorResponse = await response.json();\n//           throw new Error('Failed to fetch connections: ' + errorResponse.message);\n//         }\n\n//         const result = await response.json();\n//         setConnections(result.connections);\n//       } catch (error) {\n//         alert(error.message);\n//       }\n//     };\n\n//     fetchConnections();\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!selectedUser) {\n//       alert('Please select a user to send an offer.');\n//       return;\n//     }\n\n//     const offerData = {\n//       contract_title: contractTitle,\n//       contract_details: contractDetails,\n//       user_id: selectedUser.connection_id\n//     };\n\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:8000/api/v1/send-offer', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(offerData)\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to send offer: ' + errorResponse.message);\n//       }\n\n//       alert('Offer sent successfully!');\n//       setContractTitle('');\n//       setContractDetails('');\n//       setSelectedUser(null);\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const filteredConnection = connections.filter(connection => \n//     connection.friend_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     connection.friend_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     connection.friend_phone.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   const toggleSelectUser = (connection) => {\n//     if (selectedUser && selectedUser.connection_id === connection.connection_id) {\n//       // Deselect the user if already selected\n//       setSelectedUser(null);\n//     } else {\n//       // Select the user\n//       setSelectedUser(connection);\n//     }\n//   };\n\n//   return (\n//     <div className=\"contract\">\n//       <h2>Make a Contract</h2>\n//       <h3>Your Connections</h3>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search connections...\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         style={{ marginBottom: '10px', width: '100%' }}\n//       />\n//       <div style={{ maxHeight: '200px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\n//         {filteredConnection.length > 0 ? (\n//           <ul>\n//             {filteredConnection.map((connection) => (\n//               <li key={connection.connection_id}>\n//                 {connection.friend_name} - {connection.friend_email} - {connection.friend_phone}\n//                 <button onClick={() => toggleSelectUser(connection)} style={{ marginLeft: '10px' }}>\n//                   {selectedUser && selectedUser.connection_id === connection.connection_id ? 'Deselect' : 'Select'}\n//                 </button>\n//                 {selectedUser && selectedUser.connection_id === connection.connection_id && (\n//                   <span style={{ marginLeft: '10px', color: 'green' }}>✔️</span>\n//                 )}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>No connections found.</p>\n//         )}\n//       </div>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"contractTitle\">Contract Title:</label>\n//         <input\n//           type=\"text\"\n//           id=\"contractTitle\"\n//           name=\"contractTitle\"\n//           value={contractTitle}\n//           onChange={(e) => setContractTitle(e.target.value)}\n//           required\n//         />\n\n//         <label htmlFor=\"contractDetails\">Contract Details:</label>\n//         <textarea\n//           id=\"contractDetails\"\n//           name=\"contractDetails\"\n//           value={contractDetails}\n//           onChange={(e) => setContractDetails(e.target.value)}\n//           required\n//         ></textarea>\n\n//         <button type=\"submit\">Send Offer</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default CreateContract; \nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './CreateContract.css';\n\nfunction CreateContract() {\n  const [contractTitle, setContractTitle] = useState('');\n  const [contractDetails, setContractDetails] = useState('');\n  const [connections, setConnections] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedContractType, setSelectedContractType] = useState('');\n  const [useDefaultValues, setUseDefaultValues] = useState(false); // New state for default values\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchConnections = async () => {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        alert('You are not authenticated. Please log in.');\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:8000/api/v1/connections', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (!response.ok) {\n          const errorResponse = await response.json();\n          throw new Error('Failed to fetch connections: ' + errorResponse.message);\n        }\n\n        const result = await response.json();\n        setConnections(result.connections);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n\n    fetchConnections();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!selectedUser) {\n      alert('Please select a user to send an offer.');\n      return;\n    }\n\n    const offerData = {\n      contract_title: contractTitle,\n      contract_details: contractDetails,\n      user_id: selectedUser.connection_id,\n      contract_type: selectedContractType\n    };\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/v1/send-offer', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(offerData)\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to send offer: ' + errorResponse.message);\n      }\n\n      alert('Offer sent successfully!');\n      setContractTitle('');\n      setContractDetails('');\n      setSelectedUser(null);\n      setSelectedContractType('');\n      setUseDefaultValues(false); // Reset default values\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const filteredConnection = connections.filter(connection => \n    connection.friend_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    connection.friend_email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    connection.friend_phone.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const toggleSelectUser = (connection) => {\n    if (selectedUser && selectedUser.connection_id === connection.connection_id) {\n      setSelectedUser(null);\n    } else {\n      setSelectedUser(connection);\n    }\n  };\n\n  const handleContractTypeChange = (e) => {\n    setSelectedContractType(e.target.value);\n    setUseDefaultValues(false); // Reset default values when changing contract type\n  };\n\n  const defaultValues = {\n    \"LOAN AGREEMENT\": \"Default Loan Agreement Terms: Amount: ₹1,00,000, Interest Rate: 10%, Due Date: 2024-12-31.\",\n    \"FRIENDLY LOAN AGREEMENT\": \"Default Friendly Loan Agreement Terms: Amount: ₹50,000, Interest Rate: 5%, Due Date: 2024-12-31.\",\n    \"SALES AGREEMENT\": \"Default Sales Agreement Terms: Product: Laptop, Price: ₹50,000, Delivery: 7 days.\",\n    \"CURRENCY EXCHANGE AGREEMENT\": \"Default Currency Exchange Terms: Amount: $1,000, Rate: 75 INR/USD.\",\n    \"SERVICE AGREEMENT\": \"Default Service Agreement Terms: Service: Web Development, Duration: 3 months.\",\n    \"BARTER AGREEMENT\": \"Default Barter Agreement Terms: Goods: Wheat, Quantity: 100 kg.\"\n  };\n\n  return (\n    <div className=\"contract\">\n      <h2>Make a Contract</h2>\n      <h3>Your Connections</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Search connections...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        style={{ marginBottom: '10px', width: '100%' }}\n      />\n      <div style={{ maxHeight: '200px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>\n        {filteredConnection.length > 0 ? (\n          <ul>\n            {filteredConnection.map((connection) => (\n              <li key={connection.connection_id}>\n                {connection.friend_name} - {connection.friend_email} - {connection.friend_phone}\n                <button onClick={() => toggleSelectUser(connection)} style={{ marginLeft: '10px' }}>\n                  {selectedUser && selectedUser.connection_id === connection.connection_id ? 'Deselect' : 'Select'}\n                </button>\n                {selectedUser && selectedUser.connection_id === connection.connection_id && (\n                  <span style={{ marginLeft: '10px', color: 'green' }}>✔️</span>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No connections found.</p>\n        )}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"contractTitle\">Contract Title:</label>\n        <input\n          type=\"text\"\n          id=\"contractTitle\"\n          name=\"contractTitle\"\n          value={contractTitle}\n          onChange={(e) => setContractTitle(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"contractDetails\">Contract Details:</label>\n        <textarea\n          id=\"contractDetails\"\n          name=\"contractDetails\"\n          value={contractDetails}\n          onChange={(e) => setContractDetails(e.target.value)}\n          required\n        ></textarea>\n\n        <label htmlFor=\"contractType\">Select Contract Type:</label>\n        <select\n          id=\"contractType\"\n          value={selectedContractType}\n          onChange={handleContractTypeChange}\n          required\n        >\n          <option value=\"\">--Select a Contract Type--</option>\n          <option value=\"LOAN AGREEMENT\">Loan Agreement</option>\n          <option value=\"FRIENDLY LOAN AGREEMENT\">Friendly Loan Agreement</option>\n          <option value=\"SALES AGREEMENT\">Sales Agreement</option>\n          <option value=\"CURRENCY EXCHANGE AGREEMENT\">Currency Exchange Agreement</option>\n          <option value=\"SERVICE AGREEMENT\">Service Agreement</option>\n          <option value=\"BARTER AGREEMENT\">Barter Agreement</option>\n        </select>\n\n        {selectedContractType && (\n          <div>\n            <h4>Default Values for {selectedContractType}</h4>\n            <p>{defaultValues[selectedContractType]}</p>\n            <button type=\"button\" onClick={() => setUseDefaultValues(true)}>\n              Use Default Values\n            </button>\n            <button type=\"button\" onClick={() => setUseDefaultValues(false)}>\n              Customize\n            </button>\n          </div>\n        )}\n\n        {useDefaultValues && (\n          <div>\n            <h4>Using Default Values</h4>\n            <p>Contract Title: {contractTitle || defaultValues[selectedContractType]}</p>\n            <p>Contract Details: {contractDetails || defaultValues[selectedContractType]}</p>\n          </div>\n        )}\n\n        <button type=\"submit\">Send Offer</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateContract; "],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACt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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}