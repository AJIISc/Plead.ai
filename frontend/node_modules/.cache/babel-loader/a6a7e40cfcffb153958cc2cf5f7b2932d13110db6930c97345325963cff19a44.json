{"ast":null,"code":"var _jsxFileName = \"/Users/anurajmaurya/Desktop/Cursor Project/frontend/src/components/PendingContracts.js\",\n  _s = $RefreshSig$();\n// // \n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './PendingContracts.css';\n\n// function PendingContracts() {\n//   const [pendingContracts, setPendingContracts] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchPendingContracts();\n//   }, []);\n\n//   const fetchPendingContracts = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8000/api/v1/pending-offers', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to fetch pending contracts: ' + errorResponse.message);\n//       }\n\n//       const result = await response.json();\n//       console.log('API Response:', result);\n//       setPendingContracts(Array.isArray(result.pending_offers) ? result.pending_offers : []);\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   // Filter pending contracts based on search term\n//   const filteredContracts = pendingContracts.filter(contract =>\n//     contract.offer_details.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   const handleAcceptOffer = async (offerId, offerDetails, contractType, senderId, contract_title) => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8000/api/v1/accept-offer', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ offerId, offerDetails, contractType, senderId, contract_title }) // Include offerTitle in the request\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to accept offer: ' + errorResponse.message);\n//       }\n\n//       const result = await response.json();\n//       alert('Offer accepted successfully: ' + result.message);\n\n//       // Refresh the pending contracts\n//       fetchPendingContracts();\n\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const handleCounterOffer = async (offerId) => {\n//     // Logic to counter the offer\n//     console.log(`Countering offer for offer ID: ${offerId}`);\n//     // Call the API to counter the offer\n//   };\n\n//   const handleRejectOffer = async (offerId) => {\n//     // Logic to reject the offer\n//     console.log(`Rejecting offer for offer ID: ${offerId}`);\n//     // Call the API to reject the offer\n//   };\n\n//   const handleCheckContractDetails = async (offerId) => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/v1/contract-details/${offerId}`, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to fetch contract details: ' + errorResponse.message);\n//       }\n\n//       const contractDetails = await response.json();\n//       alert(`Contract Details:\\n${JSON.stringify(contractDetails, null, 2)}`); // Display contract details in an alert\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"pending-contracts\">\n//       <h2>Pending Contracts</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search contracts...\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         style={{ marginBottom: '10px', width: '100%' }}\n//       />\n//       <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//         <thead>\n//           <tr>\n//             <th>Offer ID</th>\n//             <th>Sender Name</th> {/* New column for sender name */}\n//             <th>Details</th>\n//             <th>Status</th>\n//             <th>Offer Title</th> {/* New column for offer title */}\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredContracts.length > 0 ? (\n//             filteredContracts.map((contract) => (\n//               <tr key={contract.offer_id}>\n//                 <td>{contract.offer_id}</td>\n//                 <td>{contract.sender_name}</td> {/* Display sender name */}\n//                 <td>{contract.offer_details}</td>\n//                 <td>{contract.offer_status}</td>\n//                 <td>{contract.contract_title}</td> {/* Display offer title */}\n//                 <td>\n//                   <button onClick={() => handleCheckContractDetails(contract.offer_id)}>Check Details</button>\n//                   <button onClick={() => handleAcceptOffer(contract.offer_id, contract.offer_details, contract.contract_type, contract.sender_id, contract.contract_title)}>Accept Offer</button>\n//                   <button onClick={() => handleCounterOffer(contract.offer_id)}>Counter Offer</button>\n//                   <button onClick={() => handleRejectOffer(contract.offer_id)}>Reject Offer</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No pending contracts found.</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default PendingContracts;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PendingContracts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PendingContracts() {\n  _s();\n  const [pendingContracts, setPendingContracts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [privateKey, setPrivateKey] = useState(''); // State for private key\n  const [selectedOffer, setSelectedOffer] = useState(null); // State for selected offer\n  const [isModalOpen, setIsModalOpen] = useState(false); // State for modal visibility\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPendingContracts();\n  }, []);\n  const fetchPendingContracts = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/pending-offers', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to fetch pending contracts: ' + errorResponse.message);\n      }\n      const result = await response.json();\n      console.log('API Response:', result);\n      setPendingContracts(Array.isArray(result.pending_offers) ? result.pending_offers : []);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleAcceptOffer = (offerId, offerDetails, contractType, senderId, contract_title) => {\n    setSelectedOffer({\n      offerId,\n      offerDetails,\n      contractType,\n      senderId,\n      contract_title\n    });\n    setIsModalOpen(true); // Open the modal\n  };\n  const handleSubmit = async () => {\n    if (!privateKey) {\n      alert('Please enter your private key.');\n      return;\n    }\n    const {\n      offerId,\n      offerDetails,\n      contractType,\n      senderId,\n      contract_title\n    } = selectedOffer;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/accept-offer', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          offerId,\n          offerDetails,\n          contractType,\n          senderId,\n          contract_title,\n          privateKey\n        }) // Include private key in the request\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to accept offer: ' + errorResponse.message);\n      }\n      const result = await response.json();\n      alert('Offer accepted successfully: ' + result.message);\n\n      // Refresh the pending contracts\n      fetchPendingContracts();\n      setIsModalOpen(false); // Close the modal\n      setPrivateKey(''); // Clear the private key input\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false); // Close the modal\n    setPrivateKey(''); // Clear the private key input\n  };\n  const handleCheckContractDetails = async offerId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/api/v1/contract-details/${offerId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to fetch contract details: ' + errorResponse.message);\n      }\n      const contractDetails = await response.json();\n      alert(`Contract Details:\\n${JSON.stringify(contractDetails, null, 2)}`); // Display contract details in an alert\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleCounterOffer = async offerId => {\n    // Logic to counter the offer\n    console.log(`Countering offer for offer ID: ${offerId}`);\n    // Implement the API call or logic for countering the offer\n  };\n  const handleRejectOffer = async offerId => {\n    // Logic to reject the offer\n    console.log(`Rejecting offer for offer ID: ${offerId}`);\n    // Implement the API call or logic for rejecting the offer\n  };\n\n  // Filter pending contracts based on search term\n  const filteredContracts = pendingContracts.filter(contract => contract.offer_details.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pending-contracts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Contracts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search contracts...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        marginBottom: '10px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Offer ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sender Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Offer Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredContracts.length > 0 ? filteredContracts.map(contract => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: contract.offer_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contract.sender_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contract.offer_details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contract.offer_status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contract.contract_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckContractDetails(contract.offer_id),\n              children: \"Check Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAcceptOffer(contract.offer_id, contract.offer_details, contract.contract_type, contract.sender_id, contract.contract_title),\n              children: \"Accept Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCounterOffer(contract.offer_id),\n              children: \"Counter Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRejectOffer(contract.offer_id),\n              children: \"Reject Offer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, contract.offer_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No pending contracts found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter Private Key to Proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your private key\",\n          value: privateKey,\n          onChange: e => setPrivateKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n}\n_s(PendingContracts, \"NcR/95C1KIlSYelpAnwlHqpEqk0=\", false, function () {\n  return [useNavigate];\n});\n_c = PendingContracts;\nexport default PendingContracts;\nvar _c;\n$RefreshReg$(_c, \"PendingContracts\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","PendingContracts","_s","pendingContracts","setPendingContracts","searchTerm","setSearchTerm","privateKey","setPrivateKey","selectedOffer","setSelectedOffer","isModalOpen","setIsModalOpen","navigate","fetchPendingContracts","token","localStorage","getItem","alert","response","fetch","method","headers","ok","errorResponse","json","Error","message","result","console","log","Array","isArray","pending_offers","error","handleAcceptOffer","offerId","offerDetails","contractType","senderId","contract_title","handleSubmit","body","JSON","stringify","handleCancel","handleCheckContractDetails","contractDetails","handleCounterOffer","handleRejectOffer","filteredContracts","filter","contract","offer_details","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","marginBottom","width","borderCollapse","length","map","offer_id","sender_name","offer_status","onClick","contract_type","sender_id","colSpan","_c","$RefreshReg$"],"sources":["/Users/anurajmaurya/Desktop/Cursor Project/frontend/src/components/PendingContracts.js"],"sourcesContent":["// // \n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './PendingContracts.css';\n\n// function PendingContracts() {\n//   const [pendingContracts, setPendingContracts] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchPendingContracts();\n//   }, []);\n\n//   const fetchPendingContracts = async () => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8000/api/v1/pending-offers', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to fetch pending contracts: ' + errorResponse.message);\n//       }\n\n//       const result = await response.json();\n//       console.log('API Response:', result);\n//       setPendingContracts(Array.isArray(result.pending_offers) ? result.pending_offers : []);\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   // Filter pending contracts based on search term\n//   const filteredContracts = pendingContracts.filter(contract =>\n//     contract.offer_details.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   const handleAcceptOffer = async (offerId, offerDetails, contractType, senderId, contract_title) => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch('http://localhost:8000/api/v1/accept-offer', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ offerId, offerDetails, contractType, senderId, contract_title }) // Include offerTitle in the request\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to accept offer: ' + errorResponse.message);\n//       }\n\n//       const result = await response.json();\n//       alert('Offer accepted successfully: ' + result.message);\n      \n//       // Refresh the pending contracts\n//       fetchPendingContracts();\n\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   const handleCounterOffer = async (offerId) => {\n//     // Logic to counter the offer\n//     console.log(`Countering offer for offer ID: ${offerId}`);\n//     // Call the API to counter the offer\n//   };\n\n//   const handleRejectOffer = async (offerId) => {\n//     // Logic to reject the offer\n//     console.log(`Rejecting offer for offer ID: ${offerId}`);\n//     // Call the API to reject the offer\n//   };\n\n//   const handleCheckContractDetails = async (offerId) => {\n//     const token = localStorage.getItem('token');\n\n//     if (!token) {\n//       alert('You are not authenticated. Please log in.');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/v1/contract-details/${offerId}`, {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': `Bearer ${token}`,\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       if (!response.ok) {\n//         const errorResponse = await response.json();\n//         throw new Error('Failed to fetch contract details: ' + errorResponse.message);\n//       }\n\n//       const contractDetails = await response.json();\n//       alert(`Contract Details:\\n${JSON.stringify(contractDetails, null, 2)}`); // Display contract details in an alert\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"pending-contracts\">\n//       <h2>Pending Contracts</h2>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search contracts...\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         style={{ marginBottom: '10px', width: '100%' }}\n//       />\n//       <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//         <thead>\n//           <tr>\n//             <th>Offer ID</th>\n//             <th>Sender Name</th> {/* New column for sender name */}\n//             <th>Details</th>\n//             <th>Status</th>\n//             <th>Offer Title</th> {/* New column for offer title */}\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredContracts.length > 0 ? (\n//             filteredContracts.map((contract) => (\n//               <tr key={contract.offer_id}>\n//                 <td>{contract.offer_id}</td>\n//                 <td>{contract.sender_name}</td> {/* Display sender name */}\n//                 <td>{contract.offer_details}</td>\n//                 <td>{contract.offer_status}</td>\n//                 <td>{contract.contract_title}</td> {/* Display offer title */}\n//                 <td>\n//                   <button onClick={() => handleCheckContractDetails(contract.offer_id)}>Check Details</button>\n//                   <button onClick={() => handleAcceptOffer(contract.offer_id, contract.offer_details, contract.contract_type, contract.sender_id, contract.contract_title)}>Accept Offer</button>\n//                   <button onClick={() => handleCounterOffer(contract.offer_id)}>Counter Offer</button>\n//                   <button onClick={() => handleRejectOffer(contract.offer_id)}>Reject Offer</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No pending contracts found.</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default PendingContracts;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PendingContracts.css';\n\nfunction PendingContracts() {\n  const [pendingContracts, setPendingContracts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [privateKey, setPrivateKey] = useState(''); // State for private key\n  const [selectedOffer, setSelectedOffer] = useState(null); // State for selected offer\n  const [isModalOpen, setIsModalOpen] = useState(false); // State for modal visibility\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchPendingContracts();\n  }, []);\n\n  const fetchPendingContracts = async () => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/pending-offers', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to fetch pending contracts: ' + errorResponse.message);\n      }\n\n      const result = await response.json();\n      console.log('API Response:', result);\n      setPendingContracts(Array.isArray(result.pending_offers) ? result.pending_offers : []);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleAcceptOffer = (offerId, offerDetails, contractType, senderId, contract_title) => {\n    setSelectedOffer({ offerId, offerDetails, contractType, senderId, contract_title });\n    setIsModalOpen(true); // Open the modal\n  };\n\n  const handleSubmit = async () => {\n    if (!privateKey) {\n      alert('Please enter your private key.');\n      return;\n    }\n\n    const { offerId, offerDetails, contractType, senderId, contract_title } = selectedOffer;\n\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/accept-offer', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ offerId, offerDetails, contractType, senderId, contract_title, privateKey }) // Include private key in the request\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to accept offer: ' + errorResponse.message);\n      }\n\n      const result = await response.json();\n      alert('Offer accepted successfully: ' + result.message);\n      \n      // Refresh the pending contracts\n      fetchPendingContracts();\n      setIsModalOpen(false); // Close the modal\n      setPrivateKey(''); // Clear the private key input\n\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false); // Close the modal\n    setPrivateKey(''); // Clear the private key input\n  };\n\n  const handleCheckContractDetails = async (offerId) => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      alert('You are not authenticated. Please log in.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:8000/api/v1/contract-details/${offerId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        throw new Error('Failed to fetch contract details: ' + errorResponse.message);\n      }\n\n      const contractDetails = await response.json();\n      alert(`Contract Details:\\n${JSON.stringify(contractDetails, null, 2)}`); // Display contract details in an alert\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleCounterOffer = async (offerId) => {\n    // Logic to counter the offer\n    console.log(`Countering offer for offer ID: ${offerId}`);\n    // Implement the API call or logic for countering the offer\n  };\n\n  const handleRejectOffer = async (offerId) => {\n    // Logic to reject the offer\n    console.log(`Rejecting offer for offer ID: ${offerId}`);\n    // Implement the API call or logic for rejecting the offer\n  };\n\n  // Filter pending contracts based on search term\n  const filteredContracts = pendingContracts.filter(contract =>\n    contract.offer_details.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"pending-contracts\">\n      <h2>Pending Contracts</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search contracts...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        style={{ marginBottom: '10px', width: '100%' }}\n      />\n      <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th>Offer ID</th>\n            <th>Sender Name</th>\n            <th>Details</th>\n            <th>Status</th>\n            <th>Offer Title</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredContracts.length > 0 ? (\n            filteredContracts.map((contract) => (\n              <tr key={contract.offer_id}>\n                <td>{contract.offer_id}</td>\n                <td>{contract.sender_name}</td>\n                <td>{contract.offer_details}</td>\n                <td>{contract.offer_status}</td>\n                <td>{contract.contract_title}</td>\n                <td>\n                  <button onClick={() => handleCheckContractDetails(contract.offer_id)}>Check Details</button>\n                  <button onClick={() => handleAcceptOffer(contract.offer_id, contract.offer_details, contract.contract_type, contract.sender_id, contract.contract_title)}>Accept Offer</button>\n                  <button onClick={() => handleCounterOffer(contract.offer_id)}>Counter Offer</button>\n                  <button onClick={() => handleRejectOffer(contract.offer_id)}>Reject Offer</button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"6\">No pending contracts found.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n\n      {/* Modal for entering private key */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Enter Private Key to Proceed</h3>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your private key\"\n              value={privateKey}\n              onChange={(e) => setPrivateKey(e.target.value)}\n            />\n            <div className=\"modal-actions\">\n              <button onClick={handleSubmit}>Submit</button>\n              <button onClick={handleCancel}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PendingContracts;"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}